CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

IF(DEFINED CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE} CACHE STRING "Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.")
ELSE()
  SET(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING "Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.")
ENDIF()

INCLUDE (CheckIncludeFileCXX)
INCLUDE (CMakeDependentOption)

PROJECT(Hax)

SET( CMAKE_MODULE_PATH
  ${CMAKE_MODULE_PATH}
  ${CMAKE_CURRENT_SOURCE_DIR}/CMake
  ${CMAKE_CURRENT_SOURCE_DIR}/CMake/Packages )

IF(APPLE)
  SET(ENV{CMAKE_OSX_ARCHITECTURES} "i386")
  SET(Boost_USE_STATIC_LIBS ON)
ENDIF()
IF(UNIX)
  ADD_DEFINITIONS("-std=c++0x")
  SET(Boost_USE_SHARED_LIBS ON)
ENDIF()
IF(WIN32)
  ADD_DEFINITIONS("-D_CRT_SECURE_NO_WARNINGS")
	SET(Boost_USE_SHARED_LIBS ON)
ENDIF()

SET(Boost_USE_MULTITHREAD ON)

FIND_PACKAGE(Boost 1.46 COMPONENTS filesystem thread system date_time REQUIRED)
FIND_PACKAGE(log4cpp REQUIRED)
FIND_PACKAGE(Lua51 REQUIRED)
FIND_PACKAGE(toluapp REQUIRED)
FIND_PACKAGE(YAJL REQUIRED)

# project version
SET( ${PROJECT_NAME}_VERSION_MAJOR 0 )
SET( ${PROJECT_NAME}_VERSION_MINOR 1 )
SET( ${PROJECT_NAME}_VERSION_PATCH 0 )
SET( ${PROJECT_NAME}_VERSION_BUILD 0 )

INCLUDE_DIRECTORIES(
  include
  include/Hax
  ${Boost_INCLUDE_DIRS}
  ${LOG4CPP_INCLUDE_DIR}
  ${LUA_INCLUDE_DIR}
  ${TOLUAPP_INCLUDE_DIR})

SET(EXECUTABLE_OUTPUT_PATH  "${CMAKE_CURRENT_SOURCE_DIR}/bin")
SET(LIBRARY_OUTPUT_PATH     "${CMAKE_CURRENT_SOURCE_DIR}/lib")

ADD_SUBDIRECTORY(src)
